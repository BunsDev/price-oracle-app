name: Build, Test and Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'Prod' || 'Dev' }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Test
        run: echo ${{ secrets.VITE_ALLOW_DEV_MODE }}
        env:
          VITE_ALLOW_DEV_MODE: ${{ secrets.VITE_ALLOW_DEV_MODE }}

      - name: Install project dependencies
        run: yarn --prefer-offline
        id: install

      - name: Install fork dependencies
        working-directory: ./fork
        run: yarn --prefer-offline
        id: fork-install

      - name: Compile fork contracts
        working-directory: ./fork
        run: yarn compile
        id: fork-compile
        env:
          TENDERLY_FORK_RPC: ${{ secrets.TENDERLY_FORK_RPC }}
          FORK_RPC: ${{ secrets.FORK_RPC }}

      - name: Run Prettier
        run: yarn prettier

      - name: Run Linter
        run: yarn lint

      - name: Build project dependencies
        run: yarn run build
        id: build
        env:
          VITE_ALLOW_DEV_MODE: ${{ env.VITE_ALLOW_DEV_MODE }}
          CUSTOM_LOCAL_RPC: ${{ env.CUSTOM_LOCAL_RPC }}
          VITE_ALCHEMY_KEY: ${{ env.VITE_ALCHEMY_KEY }}
          VITE_CUSTOM_RPC: ${{ env.VITE_CUSTOM_RPC }}

      - name: Deploy to S3
        uses: reggionick/s3-deploy@v3
        with:
          folder: dist
          bucket: ${{ github.ref_name == 'main' && secrets.S3_BUCKET_NAME_PROD || secrets.S3_BUCKET_NAME_DEV }}
          bucket-region: ${{ github.ref_name == 'main' && secrets.S3_BUCKET_REGION_PROD || secrets.S3_BUCKET_REGION_DEV }}
          dist-id: ${{ github.ref_name == 'main' && secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD || secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}
          invalidation: / *
          delete-removed: true
          private: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
